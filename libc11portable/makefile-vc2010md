.SUFFIXES: .obj .c
# Development
#	Microsoft Visual Studio 2010  Version 10.0.40219.1 SP1Rel
#	Microsoft Visual C++ 2010  01018-532-2002181-70143
#	Microsoft(R) C/C++  16.00.40219.01 for x64
# Caution
#	Must Not Set "LIB" or "INCLUDE" parameter with MS-C
# Utility
#	dumpbin /exports xxxxx.dll
#	dumpbin /dependents xxxxx.dll
#	dumpbin /symbols xxxxx.lib
# Set x86(32bits) Environment
#	call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86
# Set amd64(64bits) Environment
#	call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" amd64
# One Step Build
#	nmake /f makefile-vc2010md all inst clean_obj
#---define--------------------------------------------------------------
APPLICATION_NAME = gts
NAME = libc11portable
IDE_TYPE = vc2010md
OPTS = /W4 /WX /MD /EHa /O2 /wd4819 /wd4996
# /wd4819 : Stop warning message by EUC-JP Code in comment
# /wd4996 : Stop warning message by MS-C old function
INCS =\
/I.\
/I..\libc11portable
SRCS =\
ptbl_cpu_is_little_endian.c\
ptbl_dir_or_file_is_exist.c\
ptbl_get_cp_hostname.c\
ptbl_get_cp_loginname.c\
ptbl_get_cp_username.c\
ptbl_get_cp_userrealname.c\
ptbl_mkdir.c\
ptbl_utils_about_path.c
#------
TARG = $(NAME).lib
OBJS = $(SRCS:.c=.obj)
DPATH_UTIL = %HOMEDRIVE%%%HOMEPATH%\utility_tools
DPATH_IDET = $(DPATH_UTIL)\$(IDE_TYPE)
DPATH_PROC = $(DPATH_IDET)\$(PROCESSOR_ARCHITECTURE)
DPATH_APPL = $(DPATH_PROC)\$(APPLICATION_NAME)
DPATH_LIBR = $(DPATH_APPL)\lib
DPATH_OBJE = $(DPATH_APPL)\obj
OBJE2LIBR = ..\lib
CC_OPTIONS = $(CXXFLAGS) $(OPTS) $(INCS)
#---action--------------------------------------------------------------
#	if not exist $(DPATH_UTIL) (mkdir $(DPATH_UTIL))
#	if not exist $(DPATH_IDET) (mkdir $(DPATH_IDET))
#	if not exist $(DPATH_PROC) (mkdir $(DPATH_PROC))
all: make_obj_dir $(TARG)
make_obj_dir:
	if not exist $(DPATH_APPL) (mkdir $(DPATH_APPL))
	if not exist $(DPATH_LIBR) (mkdir $(DPATH_LIBR))
	if not exist $(DPATH_OBJE) (mkdir $(DPATH_OBJE))
$(TARG): $(OBJS)
	pushd $(DPATH_OBJE) & lib /wx $? /out:$(OBJE2LIBR)\$@.new & popd
.c.obj:
	cl $(CC_OPTIONS) /c $< /Fo$(DPATH_OBJE)/$@
inst:
	move $(DPATH_LIBR)\$(TARG).new $(DPATH_LIBR)\$(TARG)
clean_obj:
	pushd $(DPATH_OBJE) & del $(OBJS) & popd
